/* MessageBubble 组件样式模块 */

.messageBubble {
  max-width: 360px;
  padding: 10px 16px;
  border-radius: 18px;
  word-break: break-words;
  line-height: 1.4;
  font-size: 14px;
  box-shadow: var(--milky-shadow-card);
  transition: all 0.2s ease;
}

.messageBubble:hover {
  box-shadow: var(--milky-shadow-hover);
  transform: translateY(-1px);
}

.messageBubbleSent {
  background-color: var(--milky-primary);
  color: #333;
  margin-left: auto;
  border-bottom-right-radius: 6px;
}

.messageBubbleReceived {
  background-color: var(--milky-message-bg);
  color: var(--milky-text);
  border: 1px solid var(--milky-border);
  border-bottom-left-radius: 6px;
}

.messageContainer {
  display: flex;
  margin-bottom: 16px;
}

.messageContainerFromMe {
  justify-content: flex-end;
}

.messageContainerFromOther {
  justify-content: flex-start;
}

.avatarContainer {
  flex-shrink: 0;
}

.avatarContainerLeft {
  margin-right: 12px;
}

.avatarContainerRight {
  margin-left: 12px;
}

.messageContent {
  display: flex;
  flex-direction: column;
  max-width: 360px;
}

.messageContentAlignEnd {
  align-items: flex-end;
}

.messageContentAlignStart {
  align-items: flex-start;
}

.messageText {
  font-size: 14px;
  white-space: pre-wrap;
  word-break: break-word;
  line-height: 1.4;
  margin: 0;
}

.messageTimeContainer {
  display: flex;
  align-items: center;
  gap: 4px;
  margin-top: 4px;
}

.messageTime {
  font-size: 12px;
  color: var(--milky-text-light);
}

.sendStatusIcon {
  flex-shrink: 0;
}

.sendStatusIconWrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  border-radius: 50%;
  padding: 2px;
  transition: background-color 0.2s ease;
}

.sendStatusIconWrapper:hover {
  background-color: rgba(255, 68, 68, 0.1);
}

.sendStatusSending {
  color: var(--milky-text-light);
  animation: rotate 1s linear infinite;
}

.sendStatusSent {
  color: var(--milky-text-light);
}

.sendStatusFailed {
  color: #ff4444;
  cursor: pointer;
}

.sendStatusFailed:hover {
  color: #ff6666;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

 